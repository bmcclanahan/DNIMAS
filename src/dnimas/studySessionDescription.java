/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * studySessionDescription.java
 *
 * Created on Feb 8, 2013, 1:15:27 AM
 */

package dnimas;
import javax.swing.*;

import java.awt.*;
import java.awt.event.*;
/**
 *
 * @author b.mcclanahan
 */
public class studySessionDescription extends javax.swing.JFrame {
    String[] namesS;
    String[] passwordsS;
    String[] descriptionS;
    String file;
    int currentStudent;
    int numberOfStudents;
    int option;
    int option12;
    int beginHourNum;
    int beginMinNum;
    int endHourNum;
    int endMinNum;
    descriptionConfirmation dc1;
    DBConnect dataGiver;
    /** Creates new form studySessionDescription */
    public studySessionDescription(int option2,int option22, int current, int number, String[] descriptionsS2,String[] namesS2,String[] passwordsS2,int beginHourNum2, int beginMinNum2,int endHourNum2, int endMinNum2,descriptionConfirmation dc2,String fileName,DBConnect dataGiv) {
        super("Study Session Description");
        initComponents();
        file = fileName;
	dc1 = dc2;
	beginHourNum = beginHourNum2;
	beginMinNum = beginMinNum2;
	endHourNum = endHourNum2;
	endMinNum = endMinNum2;
	option = option2;
	option12 = option22;
	currentStudent = current;
	numberOfStudents = number;
        dataGiver = dataGiv; 
	description.setLineWrap(true);
	description.setWrapStyleWord(true);
	int limit;
        
	if(option != 0)
	{
	   descriptionS = new String[number];
           namesS = new String[number];
           passwordsS = new String[number];
	   limit =  number;
	}
	else
	{
	   descriptionS = new String[current+1];
	   namesS = new String[current + 1];
           passwordsS = new String[current +1];
	   limit = current;

	}


	for(int i =0;i<limit;i++)
	{
	   descriptionS[i] = descriptionsS2[i];
	   namesS[i] = namesS2[i];
	   passwordsS[i] = passwordsS2[i];
	}
        //add list of students successfully logged in
        String[] fullName;
        String studentsString = "";
        try{
           fullName = dataGiver.getFullName(namesS2);
           for(int i=0;i<fullName.length;i++){
              studentsString = studentsString + fullName[i] + "\n";
           }
           loggedInStudents.setText(studentsString);
           loggedInStudents.setEditable(false);
        }catch(Exception E){
           JOptionPane.showMessageDialog(null, "Could not fetch full name from database" + E);
        }
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
 	setResizable(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        names = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        submit = new javax.swing.JButton();
        skip = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        passwords = new javax.swing.JPasswordField();
        jScrollPane3 = new javax.swing.JScrollPane();
        loggedInStudents = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        jLabel3.setText("Study Session Description");

        description.setColumns(20);
        description.setRows(5);
        jScrollPane1.setViewportView(description);

        scrollPane1.add(jScrollPane1);

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        skip.setText("Skip");
        skip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel4.setText("*click red 'x' at top right corner to cancel");

        loggedInStudents.setColumns(20);
        loggedInStudents.setRows(5);
        jScrollPane3.setViewportView(loggedInStudents);

        jLabel5.setText("Students Successfully Logged In");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(names, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(passwords)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(87, 87, 87)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(skip, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(147, 147, 147)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(346, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(names, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passwords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(skip))
                .addGap(19, 19, 19)
                .addComponent(jLabel4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
         // TODO add your handling code here:
         int n = JOptionPane.showConfirmDialog(this,"Are you sure you want to submit","Confirmation",JOptionPane.YES_NO_OPTION);
         if(n==0){
                   String tempUserName = names.getText();
	           String tempPassword = passwords.getText();
		   String comparePassword;
	           int checkRedundant = 0;
	           
		   try{
			     for(int i=0;i<currentStudent;i++)
			     {
			    	 //If there is a name already in the list which matches this entry set checkRedundant to 1
			    	 if(namesS[i].equals(names.getText()) && option12 != 1)
			    	    checkRedundant = 1;
			     }
			     //tempPassword = hash.sha1(tempPassword);
			     comparePassword = dataGiver.getDataLog(tempUserName);
			     int loggedIn = dataGiver.checkLogIn(tempUserName);
			     if(tempPassword.equals(comparePassword) && checkRedundant == 0 && loggedIn == 1)
			     {

			         if(option == 0)
			         {
				        namesS[currentStudent] = names.getText();
				        passwordsS[currentStudent] = passwords.getText();
				        descriptionS[currentStudent] = description.getText();
			            if(currentStudent < numberOfStudents)
			            {
			               studySessionDescription s = new studySessionDescription(0,0,currentStudent+1,numberOfStudents,descriptionS,namesS,passwordsS,beginHourNum,beginMinNum,endHourNum,endMinNum,new descriptionConfirmation(),file,dataGiver);
		                   s.setVisible(true);
		                   dispose();
		  	            }
			            else
			            {
			    	       if(option12 == 0)
			     	       {

			    	          workUpload wu = new workUpload(0,0,currentStudent+1,numberOfStudents,descriptionS,namesS,passwordsS,beginHourNum,beginMinNum,endHourNum,endMinNum,new descriptionConfirmation(),file);
			    	          wu.setVisible(true);
					          dispose();
			    	       }
			          	   else
			    	       {
				              descriptionConfirmation dc = new descriptionConfirmation(namesS,descriptionS,passwordsS,beginHourNum,beginMinNum,endHourNum,endMinNum,file);
				              dc.setVisible(true);
				              dispose();
				              dc1.dispose();
			    	        }

			             }
			          }
			          else
			          {
				         //System.out.println("here" + option);
				          namesS[option-1] = names.getText();
				          passwordsS[option-1] = passwords.getText();
				          descriptionS[option-1] = description.getText();
		  	              descriptionConfirmation dc = new descriptionConfirmation(namesS,descriptionS,passwordsS,beginHourNum,beginMinNum,endHourNum,endMinNum,file);
			              dc.setVisible(true);
				          dispose();
				          dc1.dispose();
			          }
			   }
			   else{
				   if(!tempPassword.equals(comparePassword))
				      JOptionPane.showMessageDialog(null, "Your username or password is incorrect");
				   //else  if(loggedIn == 0)
					 // JOptionPane.showMessageDialog(null, "You are not logged in");
				   else if(loggedIn == 1)
					  JOptionPane.showMessageDialog(null, "There is already an entry for this user");
				   else
					  JOptionPane.showMessageDialog(null, "You are not logged in");
			   }
		   }catch(Exception E){


			   JOptionPane.showMessageDialog(null, "Your username or password is incorrect" + E);

		   }
        }
    }//GEN-LAST:event_submitActionPerformed

    private void skipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipActionPerformed
        // TODO add your handling code here:
         int n = JOptionPane.showConfirmDialog(this,"Are you sure you want to submit","Confirmation",JOptionPane.YES_NO_OPTION);
         if(n==0){
             if(currentStudent < numberOfStudents){
                studySessionDescription s = new studySessionDescription(0,0,currentStudent,numberOfStudents-1,descriptionS,namesS,passwordsS,beginHourNum,beginMinNum,endHourNum,endMinNum,new descriptionConfirmation(),file,dataGiver);
                s.setVisible(true);
                dispose();
	     }
             else
	     {
		String[] descrip = new String[numberOfStudents];
		String[] names = new String[numberOfStudents];
		String[] pass = new String[numberOfStudents];

		for(int i=0;i<numberOfStudents;i++){
		   descrip[i] = descriptionS[i];
		   names[i] = namesS[i];
		   pass[i] = passwordsS[i];
		}
		if(option12 == 0)
	     	{
		   workUpload wu = new workUpload(0,0,currentStudent+1,numberOfStudents,descriptionS,namesS,passwordsS,beginHourNum,beginMinNum,endHourNum,endMinNum,new descriptionConfirmation(),file);
		   wu.setVisible(true);
	           dispose();
	    	}
	        else
	    	{
		   descriptionConfirmation dc = new descriptionConfirmation(names,descrip,pass,beginHourNum,beginMinNum,endHourNum,endMinNum,file);
		   dc.setVisible(true);
		   dispose();
		   dc1.dispose();
	    	}
	     }

         }
    }//GEN-LAST:event_skipActionPerformed

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new studySessionDescription().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea loggedInStudents;
    private javax.swing.JTextField names;
    private javax.swing.JPasswordField passwords;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JButton skip;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables

}
